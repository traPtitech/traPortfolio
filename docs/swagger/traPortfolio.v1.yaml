openapi: 3.0.0
info:
  title: traPortfolio
  version: "1.0"
  contact:
    name: traP
    url: "https://github.com/traPtitech/traPortfolio"
  description: traPortfolio v1 API
servers:
  - url: "http://localhost:1323/api/v1"
    description: local
paths:
  /users:
    get:
      summary: ユーザーのリストを取得
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
      operationId: getUsers
      description: |-
        ユーザー情報を取得します
        `include-suspended`を指定しない場合、レスポンスに非アクティブユーザーは含まれません。
      parameters:
        - schema:
            type: boolean
            default: "false"
          in: query
          name: include-suspended
          description: アカウントがアクティブでないユーザーを含めるかどうか
        - schema:
            type: string
          in: query
          name: name
          description: 指定した文字列がtraP IDに含まれているかどうか
      tags:
        - user
  "/users/{userId}":
    parameters:
      - $ref: "#/components/parameters/userIdInPath"
    get:
      summary: ユーザー詳細情報の取得
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDetail"
        "404":
          description: Not Found
      operationId: getUser
      description: ユーザー詳細情報を取得します
      tags:
        - user
    patch:
      summary: ユーザー情報の編集
      operationId: editUser
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
      description: ユーザー情報を修正します
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditUser"
  "/users/{userId}/accounts":
    parameters:
      - $ref: "#/components/parameters/userIdInPath"
    put:
      summary: アカウント情報の追加
      operationId: addAccount
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
      description: アカウント情報を追加します
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
    delete:
      summary: アカウント情報の削除
      operationId: deleteAccount
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
      description: アカウント情報を削除します
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
  "/user/{userId}/projects":
    parameters:
      - $ref: "#/components/parameters/userIdInPath"
    get:
      summary: ユーザーが所属するプロジェクトの取得
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Project"
        "404":
          description: Not Found
      operationId: getUserProjects
      description: ユーザーが所属している（いた）プロジェクトを取得します
      tags:
        - user
        - project
  "/user/{userId}/contests":
    parameters:
      - $ref: "#/components/parameters/userIdInPath"
    get:
      summary: ユーザーが参加したコンテストの取得
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Contest"
        "404":
          description: Not Found
      operationId: getUserContests
      description: ユーザーが参加したコンテストを取得します
      tags:
        - user
        - contest
  "/user/{userId}/groups":
    parameters:
      - $ref: "#/components/parameters/userIdInPath"
    get:
      summary: ユーザーが所属した班の取得
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Group"
        "404":
          description: Not Found
      operationId: getUserGroups
      description: ユーザーが所属しているまたは所属したことのある班を取得します
      tags:
        - user
        - group
  "/user/{userId}/events":
    parameters:
      - $ref: "#/components/parameters/userIdInPath"
    get:
      summary: ユーザーが開催したイベントの取得
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event"
        "404":
          description: Not Found
      operationId: getUserEvents
      description: ユーザーが開催したイベントを取得します
      tags:
        - user
        - event
  /projects:
    get:
      summary: プロジェクトのリストを取得
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Project"
      operationId: getProjects
      description: プロジェクトのリストを取得します
      tags:
        - project
    post:
      summary: プロジェクトの作成
      operationId: postProject
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
      description: プロジェクトを作成します
      tags:
        - project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostProject"
  "/projects/{projectId}":
    parameters:
      - $ref: "#/components/parameters/projectIdInPath"
    get:
      summary: プロジェクト詳細情報を取得
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        "404":
          description: Not Found
      operationId: getProject
      description: プロジェクトの詳細情報を取得します
      tags:
        - project
    patch:
      summary: プロジェクト詳細情報の修正
      operationId: editProject
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
      description: プロジェクト情報を修正します
      tags:
        - project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditProject"
  /events:
    get:
      summary: イベントリストを取得
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event"
      operationId: getEvents
      description: イベント情報を取得します
      tags:
        - event
    parameters: []
  /groups:
    get:
      summary: 班のリストの取得
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Group"
      operationId: getGroups
      description: 班のリストを取得します
      tags:
        - group
    parameters: []
  "/events/{eventId}":
    parameters:
      - $ref: "#/components/parameters/eventIdInPath"
    get:
      summary: イベント詳細情報を取得
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        "404":
          description: Not Found
      operationId: getEvent
      description: イベント情報詳細を取得します
      tags:
        - event
  /contests:
    get:
      summary: コンテストのリストの取得
      tags:
        - contest
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Contest"
      operationId: getContests
      description: コンテストのリストを取得します
    parameters: []
    post:
      summary: コンテストの作成
      operationId: postContest
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostContest"
      tags:
        - contest
      description: コンテストを作成します
  "/contests/{contestId}":
    parameters:
      - $ref: "#/components/parameters/contestIdInPath"
    get:
      summary: コンテスト詳細情報の取得
      tags:
        - contest
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contest"
        "404":
          description: Not Found
      operationId: getContest
      description: コンテスト詳細情報を取得します
    patch:
      summary: ""
      operationId: editContest
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
      description: コンテスト情報を修正します
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditContest"
      tags:
        - contest
components:
  schemas:
    User:
      title: User
      type: object
      description: ユーザー情報
      x-examples: {}
      properties:
        id:
          type: string
          description: ユーザーUUID
          format: uuid
        name:
          type: string
          pattern: "^[a-zA-Z0-9_-]{1,32}$"
          description: ユーザー名
        displayName:
          type: string
          description: ユーザー表示名
          minLength: 0
          maxLength: 32
      required:
        - id
        - name
        - displayName
    UserAccountState:
      type: integer
      title: UserAccountState
      description: |-
        ユーザーアカウント状態
        0: 停止
        1: 有効
        2: 一時停止
      enum:
        - 0
        - 1
        - 2
      x-enum-varnames:
        - deactivated
        - active
        - suspended
      format: int32
    UserDetail:
      title: UserDetail
      type: object
      description: ユーザー詳細情報
      properties:
        id:
          type: string
          format: uuid
          description: ユーザーUUID
        state:
          $ref: "#/components/schemas/UserAccountState"
        displayName:
          type: string
          description: ユーザー表示名
          minLength: 0
          maxLength: 32
        name:
          type: string
          pattern: "^[a-zA-Z0-9_-]{1,32}$"
          description: ユーザー名
        bio:
          type: string
          description: 自己紹介(biography)
          maxLength: 1000
        realName:
          type: string
          description: ユーザー本名
        accounts:
          type: array
          description: 各種アカウントへのリンク
          items:
            $ref: "#/components/schemas/Account"
      required:
        - id
        - state
        - displayName
        - name
        - bio
        - accounts
    EditUser:
      title: EditUserRequest
      type: object
      description: ユーザー情報変更リクエスト
      properties:
        bio:
          type: string
          description: 自己紹介(biography)
        check:
          type: boolean
          description: 本名を公開するかどうか
          default: "false"
      required:
        - bio
        - check
    Account:
      title: Account
      type: object
      description: アカウントへのリンク
      properties:
        id:
          type: string
          description: アカウントID
        type:
          $ref: "#/components/schemas/AccountType"
        permittedPr:
          type: boolean
          description: 広報での利用が許可されているかどうか
      required:
        - id
        - type
        - permittedPr
    AccountType:
      type: integer
      title: EventLevel
      description: アカウントの種類
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
      x-enum-varnames:
        - homepage
        - blog
        - twitter
        - facebook
        - pixiv
        - github
        - qiita
        - atcoder
        - soundcloud
      x-enum-descriptions:
        - ホームページ (IDはリンクのURLそのまま)
        - ブログ (IDはリンクのURLそのまま)
        - Twitter (IDは@～のもの、@は含まない)
        - Facebook
        - Pixiv
        - GitHub (@は含まない)
        - Qiita (@は含まない)
        - AtCoder
        - SoundCloud
    Project:
      title: Project
      type: object
      description: プロジェクト情報
      properties:
        id:
          type: string
          format: uuid
          description: プロジェクトuuid
        name:
          type: string
          description: プロジェクト名
        description:
          type: string
          description: プロジェクト説明
        members:
          type: array
          description: プロジェクトメンバー
          items:
            $ref: "#/components/schemas/ProjectMember"
        duration:
          format: date-time
          description: |-
            プロジェクトの期間
            nullがあった場合存続中
          type: array
          items:
            $ref: "#/components/schemas/Duration"
        createdAt:
          type: string
          description: 作成日時
        updatedAt:
          type: string
          description: 変更日時
      required:
        - id
        - name
        - description
        - members
        - duration
    ProjectMember:
      title: ProjectMember
      type: object
      description: プロジェクトメンバー情報
      properties:
        id:
          type: string
          format: uuid
          description: プロジェクトuuid
        name:
          type: string
          pattern: "^[a-zA-Z0-9_-]{1,32}$"
          description: プロジェクト名
        duration:
          format: date-time
          description: |-
            プロジェクトに所属している期間の配列
            nullがあったらまだ所属している
          type: array
          items:
            $ref: "#/components/schemas/Duration"
      required:
        - id
        - name
        - duration
    Event:
      type: object
      description: イベント情報
      title: Event
      properties:
        name:
          type: string
          example: 第n回進捗会
          description: イベント名
        descirption:
          type: string
          example: 第n回の進捗会です。
          description: イベント説明
        sharedRoom:
          type: boolean
          example: false
          description: シェアされているか
        timeStart:
          type: string
          example: "2004-04-01T12:00Z"
          description: はじめ
        timeEnd:
          type: string
          example: "2004-04-01T12:00Z"
          description: おわり
        roomId:
          type: string
          format: uuid
          example: a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11
          description: 部屋uuid
        groupId:
          type: string
          format: uuid
          example: a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11
          description: グループuuid
        level:
          $ref: "#/components/schemas/EventLevel"
      required:
        - name
        - descirption
        - sharedRoom
        - timeStart
        - timeEnd
        - roomId
        - groupId
        - level
    Contest:
      title: Contest
      type: object
      description: コンテスト情報
      properties:
        id:
          type: string
          format: uuid
          description: コンテストuuid
        description:
          type: string
          description: コンテストの説明
        members:
          type: array
          description: コンテスト参加者
          items:
            $ref: "#/components/schemas/ContestMember"
      required:
        - id
        - description
        - members
    ContestMember:
      title: ContestMember
      type: object
      description: コンテストメンバー情報
      properties:
        id:
          type: string
          format: uuid
          description: コンテストメンバーuuid
        name:
          type: string
          pattern: "^[a-zA-Z0-9_-]{1,32}$"
          description: ユーザー名
      required:
        - id
        - name
    Group:
      title: Group
      type: object
      description: 班情報
      properties:
        id:
          type: string
          format: uuid
          description: 班uuid
        name:
          type: string
          description: 班名
        leader:
          $ref: "#/components/schemas/User"
        members:
          type: array
          description: 班メンバー
          items:
            $ref: "#/components/schemas/GroupMember"
        description:
          type: string
          description: 班説明
      required:
        - id
        - name
        - leader
        - members
    GroupMember:
      title: GroupMember
      type: object
      description: 班所属メンバー情報
      properties:
        id:
          type: string
          format: uuid
          description: 班メンバーuuid
        name:
          type: string
          pattern: "^[a-zA-Z0-9_-]{1,32}$"
          description: ユーザー名
        duration:
          description: |-
            班に入っている期間の配列
            nullのところはまだ継続して入っている
          type: array
          items:
            $ref: "#/components/schemas/Duration"
      required:
        - id
        - name
        - duration
    PostProject:
      title: PostProjectRequest
      type: object
      description: プロジェクト登録リクエスト
      properties:
        id:
          type: string
          format: uuid
          description: プロジェクトuuid
        name:
          type: string
          pattern: "^[a-zA-Z0-9_-]{1,32}$"
          description: プロジェクト名
        description:
          type: string
          description: プロジェクト説明
        members:
          type: array
          description: プロジェクトメンバー
          items:
            $ref: "#/components/schemas/ProjectMember"
        duration:
          type: array
          description: |-
            プロジェクト期間の配列
            nullがあった場合存続中
          items:
            $ref: "#/components/schemas/Duration"
      required:
        - id
        - name
        - description
        - members
        - duration
    PostContest:
      title: PostContestRequest
      type: object
      description: コンテスト登録リクエスト
      properties:
        id:
          type: string
          format: uuid
          description: コンテストuuid
        name:
          type: string
          minLength: 1
          maxLength: 64
          description: コンテスト名
        description:
          type: string
          description: コンテスト説明
      required:
        - id
        - name
        - description
    EditProject:
      title: PatchProject
      type: object
      description: プロジェクト変更リクエスト
      properties:
        name:
          type: string
          pattern: "^[a-zA-Z0-9_-]{1,32}$"
          description: プロジェクト名
        description:
          type: string
          description: プロジェクト説明
        members:
          type: string
          description: プロジェクトメンバー
        duration:
          format: date-time
          description: |-
            プロジェクト期間の配列
            nullがあった場合存続中
          type: array
          items:
            $ref: "#/components/schemas/Duration"
    EditContest:
      title: EditContest
      type: object
      description: コンテスト情報変更リクエスト
      properties:
        name:
          type: string
          description: コンテスト名
        description:
          type: string
          description: コンテスト説明
        members:
          type: array
          description: コンテスト参加者
          items:
            $ref: "#/components/schemas/ContestMember"
    EventLevel:
      type: integer
      title: EventLevel
      description: |-
        公開範囲設定
        0 イベント企画者の名前を伏せて公開
        1 全て公開
        2 外部に非公開
      enum:
        - 0
        - 1
        - 2
      x-enum-varnames:
        - Anonymous
        - Public
        - Private
      x-enum-descriptions:
        - イベントの企画者の名前を伏せて公開
        - 全て公開
        - 外部に非公開
    Duration:
      title: Period
      type: object
      properties:
        since:
          type: string
          format: date-time
          description: 期間始まり
        until:
          type: string
          format: date-time
          nullable: true
          description: |-
            期間終わり
            nullの場合まだ存続している
      required:
        - since
        - until
      description: 班やプロジェクトの存続期間
  parameters:
    userIdInPath:
      name: userId
      in: path
      required: true
      description: ユーザーUUID
      schema:
        type: string
        format: uuid
    projectIdInPath:
      name: projectId
      in: path
      required: true
      description: プロジェクトUUID
      schema:
        type: string
        format: uuid
    eventIdInPath:
      name: eventId
      in: path
      required: true
      description: イベントUUID
      schema:
        type: string
        format: uuid
    contestIdInPath:
      name: contestId
      in: path
      required: true
      description: コンテストUUID
      schema:
        type: string
        format: uuid
tags:
  - name: user
    description: ユーザーAPI
  - name: project
    description: プロジェクトAPI
  - name: event
    description: イベントAPI
  - name: group
    description: 班API
  - name: contest
    description: コンテストAPI
