openapi: 3.0.0
info:
  title: traPortfolio
  version: '1.0'
  contact:
    name: traP
    url: 'https://github.com/traPtitech/traPortfolio'
  description: traPortfolio v1 API
servers:
  - url: 'http://localhost:1323/api/v1'
    description: local
paths:
  /users:
    get:
      summary: ユーザーのリストを取得
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
      operationId: getUsers
      description: |-
        ユーザー情報を取得します
        `includeSuspended`を指定しない場合、レスポンスに非アクティブユーザーは含まれません。
      parameters:
        - $ref: '#/components/parameters/includeSuspendedInQuery'
        - $ref: '#/components/parameters/nameInQuery'
      tags:
        - user
  '/users/{userId}':
    parameters:
      - $ref: '#/components/parameters/userIdInPath'
    get:
      summary: ユーザー詳細情報の取得
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
        '404':
          description: Not Found
      operationId: getUser
      description: ユーザー詳細情報を取得します
      tags:
        - user
    patch:
      summary: ユーザー情報の編集
      operationId: editUser
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: ユーザー情報を修正します
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditUser'
  '/users/{userId}/accounts':
    parameters:
      - $ref: '#/components/parameters/userIdInPath'
    post:
      summary: アカウント情報の追加
      operationId: addAccount
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: アカウント情報を追加します
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAccount'
    get:
      summary: ユーザーアカウントのリストを取得
      operationId: getUserAccounts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: ユーザーアカウントのリストを取得します
      tags:
        - user
  '/users/{userId}/projects':
    parameters:
      - $ref: '#/components/parameters/userIdInPath'
    get:
      summary: ユーザーが所属するプロジェクトの取得
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProject'
        '404':
          description: Not Found
      operationId: getUserProjects
      description: ユーザーが所属している（いた）プロジェクトを取得します
      tags:
        - user
        - project
  '/users/{userId}/contests':
    parameters:
      - $ref: '#/components/parameters/userIdInPath'
    get:
      summary: ユーザーが参加したコンテストチームの取得
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContestTeamWithContestName'
        '404':
          description: Not Found
      operationId: getUserContests
      description: ユーザーが参加したコンテストを取得します
      tags:
        - user
        - contest
  '/users/{userId}/groups':
    parameters:
      - $ref: '#/components/parameters/userIdInPath'
    get:
      summary: ユーザーが所属した班の取得
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserGroup'
        '404':
          description: Not Found
      operationId: getUserGroups
      description: ユーザーが所属しているまたは所属したことのある班を取得します
      tags:
        - user
        - group
  '/users/{userId}/events':
    parameters:
      - $ref: '#/components/parameters/userIdInPath'
    get:
      summary: ユーザーが開催したイベントの取得
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
        '404':
          description: Not Found
      operationId: getUserEvents
      description: ユーザーが開催したイベントを取得します
      tags:
        - user
        - event
  /projects:
    get:
      summary: プロジェクトのリストを取得
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
      operationId: getProjects
      description: プロジェクトのリストを取得します
      tags:
        - project
    post:
      summary: プロジェクトの作成
      operationId: postProject
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Bad Request
      description: プロジェクトを作成します
      tags:
        - project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddProject'
  '/projects/{projectId}':
    parameters:
      - $ref: '#/components/parameters/projectIdInPath'
    get:
      summary: プロジェクト詳細情報を取得
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDetail'
        '404':
          description: Not Found
      operationId: getProject
      description: プロジェクトの詳細情報を取得します
      tags:
        - project
    patch:
      summary: プロジェクト詳細情報の修正
      operationId: editProject
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: プロジェクト情報を修正します
      tags:
        - project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditProject'
  /events:
    get:
      summary: イベントリストを取得
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
      operationId: getEvents
      description: イベント情報を取得します
      tags:
        - event
    parameters: []
  '/events/{eventId}':
    parameters:
      - $ref: '#/components/parameters/eventIdInPath'
    get:
      summary: イベント詳細情報を取得
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
        '404':
          description: Not Found
      operationId: getEvent
      description: イベント情報詳細を取得します
      tags:
        - event
    patch:
      summary: ''
      operationId: editEvent
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: イベント情報を修正します
      tags:
        - event
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditEvent'
  /groups:
    get:
      summary: 班のリストの取得
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
      operationId: getGroups
      description: 班のリストを取得します
      tags:
        - group
    parameters: []
  '/groups/{groupId}':
    parameters:
      - $ref: '#/components/parameters/groupIdInPath'
    get:
      summary: 班の情報の取得
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupDetail'
      operationId: getGroup
      description: 班の情報を取得します
      tags:
        - group
  /contests:
    get:
      summary: コンテストのリストの取得
      tags:
        - contest
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contest'
      operationId: getContests
      description: コンテストのリストを取得します
    parameters: []
    post:
      summary: コンテストの作成
      operationId: postContest
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContestDetail'
        '400':
          description: Bad Request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddContest'
      tags:
        - contest
      description: コンテストを作成します
  '/contests/{contestId}':
    parameters:
      - $ref: '#/components/parameters/contestIdInPath'
    get:
      summary: コンテスト詳細情報の取得
      tags:
        - contest
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContestDetail'
        '404':
          description: Not Found
      operationId: getContest
      description: コンテスト詳細情報を取得します
    patch:
      summary: コンテスト情報の修正
      operationId: editContest
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: コンテスト情報を修正します
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditContest'
      tags:
        - contest
    delete:
      summary: コンテストの削除
      operationId: deleteContest
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: コンテストを削除します
      tags:
        - contest
  '/contests/{contestId}/teams':
    parameters:
      - $ref: '#/components/parameters/contestIdInPath'
    get:
      summary: コンテストチームのリストの取得
      tags:
        - contest
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContestTeam'
        '404':
          description: Not Found
      operationId: getContestTeams
      description: コンテストのチーム情報を取得します
    post:
      summary: コンテストチームの作成
      operationId: postContestTeam
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContestTeam'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: コンテストチームを作成します
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddContestTeam'
      tags:
        - contest
  '/contests/{contestId}/teams/{teamId}':
    parameters:
      - $ref: '#/components/parameters/contestIdInPath'
      - $ref: '#/components/parameters/teamIdInPath'
    get:
      summary: コンテストチーム詳細情報の取得
      tags:
        - contest
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContestTeamDetail'
        '404':
          description: Not Found
      operationId: getContestTeam
      description: コンテストチーム詳細情報を取得します
    patch:
      summary: コンテストチームの修正
      operationId: editContestTeam
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: コンテストチームを修正します
      tags:
        - contest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditContestTeam'
    delete:
      summary: コンテストチームの削除
      operationId: deleteContestTeam
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: コンテストチームを削除します
      tags:
        - contest
  '/contests/{contestId}/teams/{teamId}/members':
    parameters:
      - $ref: '#/components/parameters/contestIdInPath'
      - $ref: '#/components/parameters/teamIdInPath'
    get:
      summary: コンテストチームメンバーの取得
      tags:
        - contest
        - user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      operationId: getContestTeamMembers
      description: コンテストチームメンバーを取得します
    post:
      summary: コンテストチームメンバーの追加
      operationId: postContestTeamMembers
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: コンテストチームメンバーを追加します
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberIDs'
      tags:
        - contest
        - user
    delete:
      summary: コンテストチームメンバーの削除
      operationId: deleteContestTeamMembers
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: コンテストチームメンバーを削除します
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberIDs'
      tags:
        - contest
        - user
  '/users/{userId}/accounts/{accountId}':
    parameters:
      - $ref: '#/components/parameters/userIdInPath'
      - $ref: '#/components/parameters/accountIdInPath'
    get:
      summary: ユーザーアカウント詳細情報の取得
      tags:
        - user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      operationId: getUserAccount
      description: ユーザーアカウントの詳細情報を取得します
    patch:
      summary: アカウント情報の修正
      operationId: editUserAccount
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: アカウント情報を修正します
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditAccount'
        description: ''
      tags:
        - user
    delete:
      summary: ユーザーアカウントの削除
      operationId: deleteAccount
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: アカウントを削除します
      tags:
        - user
  '/projects/{projectId}/members':
    parameters:
      - $ref: '#/components/parameters/projectIdInPath'
    get:
      summary: プロジェクトメンバーの取得
      tags:
        - project
        - user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                description: プロジェクトメンバーの配列
                items:
                  $ref: '#/components/schemas/User'
      operationId: getProjectMembers
      description: プロジェクトメンバーを取得します
    post:
      summary: プロジェクトメンバーの追加
      operationId: addProjectMembers
      description: プロジェクトメンバーを追加します
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddProjectMembers'
      tags:
        - project
        - user
    delete:
      summary: プロジェクトメンバーの削除
      operationId: deleteProjectMembers
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: プロジェクトメンバーを削除します
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberIDs'
      tags:
        - project
        - user
  /ping:
    get:
      summary: サーバー疎通確認
      operationId: ping
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
      description: サーバーの疎通確認を行います
      tags:
        - ping
components:
  schemas:
    User:
      title: User
      type: object
      description: ユーザー情報
      properties:
        id:
          type: string
          description: ユーザーUUID
          format: uuid
          x-go-type: uuid.UUID
        name:
          type: string
          pattern: '^[a-zA-Z0-9_-]{1,32}$'
          description: ユーザー名
        realName:
          type: string
          description: 本名
      required:
        - id
        - name
        - realName
    UserAccountState:
      type: integer
      title: UserAccountState
      description: |-
        ユーザーアカウント状態
        0: 凍結
        1: 有効
        2: 一時停止
      enum:
        - 0
        - 1
        - 2
      x-enum-varnames:
        - deactivated
        - active
        - suspended
      x-enum-descriptions:
        - 凍結
        - 有効
        - 一時停止
      format: int32
    UserDetail:
      title: UserDetail
      type: object
      description: ユーザー詳細情報
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            state:
              $ref: '#/components/schemas/UserAccountState'
            bio:
              type: string
              description: 自己紹介(biography)
              maxLength: 1000
            accounts:
              type: array
              description: 各種アカウントへのリンク
              items:
                $ref: '#/components/schemas/Account'
          required:
            - state
            - bio
            - accounts
    EditUser:
      title: EditUserRequest
      type: object
      description: ユーザー情報変更リクエスト
      properties:
        bio:
          type: string
          description: 自己紹介(biography)
        check:
          type: boolean
          description: |-
            本名を公開するかどうか
            true: 公開
            false: 非公開
          default: true
    Account:
      title: Account
      type: object
      description: アカウントへのリンク
      properties:
        id:
          type: string
          description: アカウントUUID
          format: uuid
          x-go-type: uuid.UUID
        displayName:
          type: string
          description: 外部アカウントの表示名
        type:
          $ref: '#/components/schemas/AccountType'
        prPermitted:
          $ref: '#/components/schemas/PrPermitted'
        url:
          type: string
          description: アカウントurl
      required:
        - id
        - displayName
        - type
        - prPermitted
        - url
    AccountType:
      type: integer
      title: AccountType
      description: アカウントの種類
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
      x-enum-varnames:
        - homepage
        - blog
        - twitter
        - facebook
        - pixiv
        - github
        - qiita
        - atcoder
        - soundcloud
      x-enum-descriptions:
        - ホームページ (IDはリンクのURLそのまま)
        - ブログ (IDはリンクのURLそのまま)
        - Twitter (IDは@～のもの、@は含まない)
        - Facebook
        - Pixiv
        - GitHub (@は含まない)
        - Qiita (@は含まない)
        - AtCoder
        - SoundCloud
      x-go-type: int64
    Project:
      title: Project
      type: object
      description: プロジェクト情報
      properties:
        id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          description: プロジェクトuuid
        name:
          type: string
          description: プロジェクト名
        duration:
          $ref: '#/components/schemas/YearWithSemesterDuration'
      required:
        - id
        - name
        - duration
    UserProject:
      title: UserProject
      type: object
      description: ユーザのプロジェクトの情報
      allOf:
        - $ref: '#/components/schemas/Project'
        - type: object
          properties:
            userDuration:
              $ref: '#/components/schemas/YearWithSemesterDuration'
          required:
            - userDuration
    ProjectDetail:
      title: ProjectDetail
      type: object
      description: プロジェクトの詳細情報
      allOf:
        - $ref: '#/components/schemas/Project'
        - type: object
          properties:
            link:
              type: string
              format: uri
              description: プロジェクトの詳細が載っているページへのリンク
            description:
              type: string
              description: プロジェクト説明
            members:
              type: array
              description: プロジェクトメンバー
              items:
                $ref: '#/components/schemas/ProjectMember'
          required:
            - link
            - description
            - members
    ProjectMember:
      title: ProjectMember
      type: object
      description: プロジェクトメンバー情報
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            duration:
              $ref: '#/components/schemas/YearWithSemesterDuration'
          required:
            - duration
    Event:
      type: object
      description: イベント情報
      title: Event
      properties:
        id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          description: イベントuuid
        name:
          type: string
          example: 第n回進捗会
          description: イベント名
        duration:
          # description: イベントの開催期間
          $ref: '#/components/schemas/Duration'
      required:
        - id
        - name
        - duration
    EventDetail:
      description: イベントの詳細情報
      title: EventDetail
      allOf:
        - $ref: '#/components/schemas/Event'
        - properties:
            description:
              type: string
              example: 第n回の進捗会です。
              description: イベント説明
            place:
              type: string
              description: 大学、オンラインなどの大まかな場所
            hostname:
              type: array
              description: 主催者
              items:
                $ref: '#/components/schemas/User'
            eventLevel:
              $ref: '#/components/schemas/EventLevel'
          required:
            - description
            - place
            - hostname
            - eventLevel
      type: object
    Contest:
      title: Contest
      type: object
      description: コンテスト情報
      properties:
        id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          description: コンテストuuid
        name:
          type: string
          description: コンテスト名
        duration:
          # description: コンテストの開催期間
          $ref: '#/components/schemas/Duration'
      required:
        - id
        - name
        - duration
    ContestDetail:
      title: ContestDetail
      type: object
      description: コンテストの詳細情報
      allOf:
        - $ref: '#/components/schemas/Contest'
        - type: object
          properties:
            link:
              type: string
              format: uri
              description: コンテストの詳細が載っているページへのリンク
            description:
              type: string
              description: コンテストの説明
            teams:
              type: array
              description: コンテストチーム
              items:
                $ref: '#/components/schemas/ContestTeam'
          required:
            - link
            - description
            - teams
    ContestTeam:
      title: ContestTeam
      type: object
      description: コンテストチーム情報
      properties:
        id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          description: コンテストチームuuid
        name:
          type: string
          description: チーム名
        result:
          type: string
          description: 順位などの結果
      required:
        - id
        - name
        - result
    ContestTeamDetail:
      title: ContestTeamDetail
      type: object
      description: コンテストチーム詳細情報
      allOf:
        - $ref: '#/components/schemas/ContestTeam'
        - type: object
          properties:
            link:
              type: string
              format: uri
              description: コンテストチームの詳細が載っているページへのリンク
            description:
              type: string
              description: チーム情報
            members:
              type: array
              description: チームメンバーのUUID
              items:
                $ref: '#/components/schemas/User'
          required:
            - link
            - description
            - members
    ContestTeamWithContestName:
      title: ContestTeamWithContestName
      type: object
      description: コンテストチーム情報(コンテスト名含む)
      allOf:
        - $ref: '#/components/schemas/ContestTeam'
        - type: object
          properties:
            contestName:
              type: string
              description: コンテスト名
          required:
            - contestName
    Group:
      title: Group
      type: object
      description: 班情報
      properties:
        id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          description: 班uuid
        name:
          type: string
          description: 班名
      required:
        - id
        - name
    UserGroup:
      title: UserGroup
      type: object
      description: ユーザーの班の情報
      allOf:
        - $ref: '#/components/schemas/Group'
        - type: object
          properties:
            duration:
              $ref: '#/components/schemas/YearWithSemesterDuration'
          required:
            - duration
    GroupDetail:
      title: GroupDetail
      type: object
      description: 班の詳細情報
      allOf:
        - $ref: '#/components/schemas/Group'
        - type: object
          properties:
            link:
              type: string
              format: uri
              description: 班の詳細が載っているページへのリンク
            admin:
              type: array
              description: 班管理者
              items:
                $ref: '#/components/schemas/User'
            members:
              type: array
              description: 班メンバー
              items:
                $ref: '#/components/schemas/GroupMember'
            description:
              type: string
              description: 班説明
          required:
            - link
            - admin
            - members
            - description
    GroupMember:
      title: GroupMember
      type: object
      description: 班所属メンバー情報
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            duration:
              $ref: '#/components/schemas/YearWithSemesterDuration'
          required:
            - duration
    AddProject:
      title: AddProject
      type: object
      description: 新規プロジェクトリクエスト
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 30
          description: プロジェクト名
        link:
          type: string
          format: uri
          description: プロジェクトの詳細が載っているページへのリンク
          x-oapi-codegen-extra-tags:
            validate: url
        description:
          type: string
          description: プロジェクト説明
        duration:
          $ref: '#/components/schemas/YearWithSemesterDuration'
      required:
        - name
        - description
        - duration
    EditProject:
      title: EditProject
      type: object
      description: プロジェクト変更リクエスト
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 30
          description: プロジェクト名
        link:
          type: string
          format: uri
          description: プロジェクトの詳細が載っているページへのリンク
          x-oapi-codegen-extra-tags:
            validate: url
        description:
          type: string
          description: プロジェクト説明
        duration:
          $ref: '#/components/schemas/YearWithSemesterDuration'
    AddContest:
      title: AddContest
      type: object
      description: 新規コンテストリクエスト
      properties:
        name:
          type: string
          description: コンテスト名
        link:
          type: string
          format: uri
          description: コンテストの詳細が載っているページへのリンク
          x-oapi-codegen-extra-tags:
            validate: url
        description:
          type: string
          description: コンテスト説明
        duration:
          # description: コンテストの開催期間
          $ref: '#/components/schemas/Duration'
      required:
        - name
        - description
        - duration
    EditContest:
      title: EditContest
      type: object
      description: コンテスト情報変更リクエスト
      properties:
        name:
          type: string
          description: コンテスト名
        link:
          type: string
          format: uri
          description: コンテストの詳細が載っているページへのリンク
          x-oapi-codegen-extra-tags:
            validate: url
        description:
          type: string
          description: コンテスト説明
        duration:
          # description: コンテストの開催期間
          $ref: '#/components/schemas/Duration'
    AddContestTeam:
      title: AddContestTeam
      type: object
      description: 新規コンテストチームリクエスト
      properties:
        name:
          type: string
          description: チーム名
        link:
          type: string
          format: uri
          description: コンテストチームの説明が載っているページへのリンク
          x-oapi-codegen-extra-tags:
            validate: url
        description:
          type: string
          description: チーム情報
        result:
          type: string
          description: 順位などの結果
      required:
        - name
        - description
    EditContestTeam:
      title: EditContestTeam
      type: object
      description: コンテストチーム情報修正リクエスト
      properties:
        name:
          type: string
          description: チーム名
        link:
          type: string
          format: uri
          description: コンテストチームの説明が載っているページへのリンク
          x-oapi-codegen-extra-tags:
            validate: url
        description:
          type: string
          description: チーム情報
        result:
          type: string
          description: 順位などの結果
    EventLevel:
      type: integer
      title: EventLevel
      description: |-
        公開範囲設定
        0 イベント企画者の名前を伏せて公開
        1 全て公開
        2 外部に非公開
      enum:
        - 0
        - 1
        - 2
      x-enum-varnames:
        - Anonymous
        - Public
        - Private
      x-enum-descriptions:
        - イベントの企画者の名前を伏せて公開
        - 全て公開
        - 外部に非公開
    Duration:
      title: Duration
      type: object
      properties:
        since:
          type: string
          format: date-time
          description: 期間始まり
        until:
          type: string
          format: date-time
          description: |-
            期間終わり
            untilがなかったらまだ存続している
      required:
        - since
      description: イベントやコンテストなどの存続期間
    YearWithSemesterDuration:
      title: YearWithSemesterDuration
      type: object
      properties:
        since:
          $ref: '#/components/schemas/YearWithSemester'
        until:
          $ref: '#/components/schemas/YearWithSemester'
      required:
        - since
      description: |-
        班やプロジェクトの期間
        年と前期/後期がある
        untilがなかった場合存続中
    YearWithSemester:
      title: YearWithSemester
      type: object
      properties:
        year:
          type: integer
        semester:
          $ref: '#/components/schemas/Semester'
      required:
        - year
        - semester
      description: 年度と前期/後期
    Semester:
      title: Semester
      type: integer
      description: |-
        0: 前期
        1: 後期
      enum:
        - 0
        - 1
      x-enum-varnames:
        - first
        - second
      x-enum-descriptions:
        - 前期
        - 後期
      format: int32
    EditEvent:
      title: EditEvent
      type: object
      description: イベント情報修正リクエスト
      properties:
        eventLevel:
          $ref: '#/components/schemas/EventLevel'
    AddProjectMembers:
      title: AddProjectMembers
      type: object
      description: プロジェクトメンバー追加リクエスト
      properties:
        members:
          type: array
          items:
            $ref: '#/components/schemas/MemberIDWithYearWithSemesterDuration'
      required:
        - members
    MemberIDWithYearWithSemesterDuration:
      title: MemberIDWithYearWithSemesterDuration
      type: object
      description: プロジェクトメンバーのユーザーUUID(期間含む)
      properties:
        userId:
          type: string
          format: uuid
          x-go-type: uuid.UUID
        duration:
          $ref: '#/components/schemas/YearWithSemesterDuration'
      required:
        - userId
        - duration
    MemberIDs:
      title: MemberIDs
      type: object
      description: ユーザーのUUIDの配列
      properties:
        members:
          type: array
          description: ユーザーのUUIDの配列
          items:
            type: string
            format: uuid
            x-go-type: uuid.UUID
      required:
        - members
    AddAccount:
      title: AddAccount
      type: object
      description: 新規アカウントリクエスト
      properties:
        type:
          $ref: '#/components/schemas/AccountType'
        prPermitted:
          $ref: '#/components/schemas/PrPermitted'
        url:
          type: string
          description: アカウントurl
          format: uri
          x-oapi-codegen-extra-tags:
            validate: url
        displayName:
          type: string
          description: 外部アカウントの表示名
      required:
        - type
        - prPermitted
        - url
        - displayName
    EditAccount:
      title: EditAccount
      type: object
      description: アカウント変更リクエスト
      properties:
        type:
          $ref: '#/components/schemas/AccountType'
        prPermitted:
          $ref: '#/components/schemas/PrPermitted'
        url:
          type: string
          description: アカウントurl
          format: uri
          x-oapi-codegen-extra-tags:
            validate: url
        displayName:
          type: string
          description: 外部アカウントの表示名
    PrPermitted:
      title: PrPermitted
      type: boolean
      description: 広報での利用が許可されているかどうか
  parameters:
    userIdInPath:
      name: userId
      in: path
      required: true
      description: ユーザーUUID
      schema:
        type: string
        format: uuid
        x-go-type: uuid.UUID
    groupIdInPath:
      name: groupId
      in: path
      required: true
      description: 班UUID
      schema:
        type: string
        format: uuid
        x-go-type: uuid.UUID
    projectIdInPath:
      name: projectId
      in: path
      required: true
      description: プロジェクトUUID
      schema:
        type: string
        format: uuid
        x-go-type: uuid.UUID
    eventIdInPath:
      name: eventId
      in: path
      required: true
      description: イベントUUID
      schema:
        type: string
        format: uuid
        x-go-type: uuid.UUID
    contestIdInPath:
      name: contestId
      in: path
      required: true
      description: コンテストUUID
      schema:
        type: string
        format: uuid
        x-go-type: uuid.UUID
    teamIdInPath:
      name: teamId
      in: path
      required: true
      description: コンテストチームUUID
      schema:
        type: string
        format: uuid
        x-go-type: uuid.UUID
    accountIdInPath:
      name: accountId
      in: path
      schema:
        type: string
        format: uuid
        x-go-type: uuid.UUID
      description: アカウントUUID
      required: true
    includeSuspendedInQuery:
      name: includeSuspended
      in: query
      schema:
        type: boolean
        default: false
      description: アカウントがアクティブでないユーザーを含めるかどうか
      x-oapi-codegen-extra-tags:
        query: includeSuspended
    nameInQuery:
      name: name
      in: query
      schema:
        type: string
        default: ''
      description: 指定した文字列がtraP IDに含まれているかどうか
      x-oapi-codegen-extra-tags:
        query: name
tags:
  - name: user
    description: ユーザーAPI
  - name: project
    description: プロジェクトAPI
  - name: event
    description: イベントAPI
  - name: group
    description: 班API
  - name: contest
    description: コンテストAPI
  - name: ping
    description: 疎通確認API
