// Code generated by MockGen. DO NOT EDIT.
// Source: usecases/repository/event_repository.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	uuid "github.com/gofrs/uuid"
	gomock "github.com/golang/mock/gomock"
	domain "github.com/traPtitech/traPortfolio/domain"
	reflect "reflect"
)

// MockEventRepository is a mock of EventRepository interface
type MockEventRepository struct {
	ctrl     *gomock.Controller
	recorder *MockEventRepositoryMockRecorder
}

// MockEventRepositoryMockRecorder is the mock recorder for MockEventRepository
type MockEventRepositoryMockRecorder struct {
	mock *MockEventRepository
}

// NewMockEventRepository creates a new mock instance
func NewMockEventRepository(ctrl *gomock.Controller) *MockEventRepository {
	mock := &MockEventRepository{ctrl: ctrl}
	mock.recorder = &MockEventRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockEventRepository) EXPECT() *MockEventRepositoryMockRecorder {
	return m.recorder
}

// GetEventLevels mocks base method
func (m *MockEventRepository) GetEventLevels() (map[uuid.UUID]*domain.EventLevelRelation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEventLevels")
	ret0, _ := ret[0].(map[uuid.UUID]*domain.EventLevelRelation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEventLevels indicates an expected call of GetEventLevels
func (mr *MockEventRepositoryMockRecorder) GetEventLevels() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEventLevels", reflect.TypeOf((*MockEventRepository)(nil).GetEventLevels))
}

// GetEventLevelByID mocks base method
func (m *MockEventRepository) GetEventLevelByID(ID uuid.UUID) (*domain.EventLevelRelation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEventLevelByID", ID)
	ret0, _ := ret[0].(*domain.EventLevelRelation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEventLevelByID indicates an expected call of GetEventLevelByID
func (mr *MockEventRepositoryMockRecorder) GetEventLevelByID(ID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEventLevelByID", reflect.TypeOf((*MockEventRepository)(nil).GetEventLevelByID), ID)
}
