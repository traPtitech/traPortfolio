name: CI

on:
  push:
    branches:
      - 'main'
  pull_request:

env:
  GO_VERSION: 1.17

jobs:
  mod:
    name: Mod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Save or restore go modules cache
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomod-${{ hashFiles('**/go.sum') }}
      - name: Download go modules
        run: go mod download
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [mod]
    env:
      GOCACHE: /tmp/go/cache
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Save or restore go modules cache
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomod-
      - name: Save or restore go binary cache
        uses: actions/cache@v3
        with:
          path: /tmp/go/cache
          key: ${{ runner.os }}-go-build-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-go-build-${{ github.ref }}-
            ${{ runner.os }}-go-build-
      - name: Compile go packages
        run: go build -o traPortfolio .
      - uses: actions/upload-artifact@v3
        with:
          name: traPortfolio
          path: traPortfolio
  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: [mod]
    steps:
      - uses: actions/checkout@v3
      - name: Run linters
        uses: reviewdog/action-golangci-lint@v2
        with:
          github_token: ${{ github.token }}
          go_version: ${{ env.GO_VERSION }}
          filter_mode: nofilter
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [build]
    env:
      GOCACHE: /tmp/go/cache
    services:
      mysql:
        image: mariadb:10.6.4
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: portfolio
        ports:
          - 3307:3306
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Save or restore go modules cache
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomod-
      - name: Save or restore go binary cache
        uses: actions/cache@v3
        with:
          path: /tmp/go/cache
          key: ${{ runner.os }}-go-build-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-go-build-${{ github.ref }}-
            ${{ runner.os }}-go-build-
      - name: Run tests
        run: |
          go test ./... -coverprofile=coverage.txt -race -vet=off -tags="integration db"
        env:
          APP_ENV: development
      - name: Upload coverage data
        uses: codecov/codecov-action@v2
        with:
          file: ./coverage.txt
      - uses: actions/upload-artifact@v3
        with:
          name: coverage.txt
          path: coverage.txt
  tbls:
    name: TBLS
    runs-on: ubuntu-latest
    needs: [build]
    services:
      mysql:
        image: mariadb:10.6.4
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: portfolio
        ports:
          - 3307:3306
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: traPortfolio
      - name: Run database linter
        run: |
          source <(curl -sL https://git.io/use-tbls)
          chmod +x ./traPortfolio
          ./traPortfolio -migrate
          tbls lint
        env:
          DB_HOST: localhost
          DB_PORT: 3307
          TBLS_DSN: mariadb://root:password@127.0.0.1:3307/portfolio
  spectral:
    name: Spectral
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Spectral checks
        uses: stoplightio/spectral-action@v0.8.0
        with:
          file_glob: docs/swagger/traPortfolio.v1.yaml
          repo_token: ${{ github.token }}
          event_name: ${{ github.event_name }}
