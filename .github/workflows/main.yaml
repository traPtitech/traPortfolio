name: CI

on:
  push:
    branches:
      - 'main'
  pull_request:

jobs:
  mod:
    name: Mod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomod-${{ hashFiles('**/go.sum') }}
      - run: go mod download
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [mod]
    env:
      GOCACHE: "/tmp/go/cache"
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomod-
      - uses: actions/cache@v1
        with:
          path: /tmp/go/cache
          key: ${{ runner.os }}-go-build-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-go-build-${{ github.ref }}-
            ${{ runner.os }}-go-build-
      - run: go build -o traPortfolio .
      - uses: actions/upload-artifact@v1
        with:
          name: traPortfolio
          path: traPortfolio
  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: [mod]
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Install reviewdog
        run: curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh | sh -s -- -b $(go env GOPATH)/bin
      - name: Install golangci-lint
        run: curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s --  -b $(go env GOPATH)/bin
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomod-
      - name: golangci-lint
        run: golangci-lint run --out-format=line-number | reviewdog -f=golangci-lint -name=golangci-lint -reporter=github-check
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [build]
    env:
      GOCACHE: "/tmp/go/cache"
    services:
      mysql:
        image: mariadb:10.0.19
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: portfolio
        ports:
          - 3306:3306
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomod-
      - uses: actions/cache@v1
        with:
          path: /tmp/go/cache
          key: ${{ runner.os }}-go-build-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-go-build-${{ github.ref }}-
            ${{ runner.os }}-go-build-
      - name: Run tests
        run: |
          go test ./... -coverprofile=coverage.txt -race -vet=off
      - name: Upload coverage data
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.txt
          yml: ./codecov.yml
      - uses: actions/upload-artifact@v1
        with:
          name: coverage.txt
          path: coverage.txt
  tbls:
    name: TBLS
    runs-on: ubuntu-latest
    needs: [build]
    services:
      mysql:
        image: mariadb:10.6.4
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: portfolio
        ports:
          - 3307:3306
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v1
        with:
          name: traPortfolio
      - name: Lint
        run: |
          source <(curl -sL https://git.io/use-tbls)
          chmod +x ./traPortfolio/traPortfolio
          DB_HOST=localhost KNOQ_COOKIE=test KNOQ_API_ENDPOINT=test TRAQ_COOKIE=test TRAQ_API_ENDPOINT=test PORTAL_COOKIE=test PORTAL_API_ENDPOINT=test DB_PORT=3307 ./traPortfolio/traPortfolio -migrate true
          tbls lint
        env:
          TBLS_DSN: "mariadb://root:password@127.0.0.1:3307/portfolio"
  spectral:
    name: Spectral
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Spectral checks
        uses: stoplightio/spectral-action@v0.7.0
        with:
          file_glob: docs/swagger/traPortfolio.v1.yaml
          repo_token: ${{ secrets.GITHUB_TOKEN }}
  deploy-staging:
    name: Deploy staging
    runs-on: ubuntu-latest
    needs: [image]
    steps:
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v1
        with:
          private-key: ${{ secrets.STAGING_SSH_KEY }}
          public-key: ${{ secrets.STAGING_SSH_KEY_PUBLIC }}
          known-hosts: ${{ secrets.STAGING_KNOWN_HOSTS }}
      - name: Deploy
        run: ssh -o APP_ENV=development -t ${{ secrets.STAGING_DEPLOY_USER }}@${{ secrets.STAGING_DEPLOY_HOST }} "sudo sh /srv/portfolio/deploy.sh"
